name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
  workflow_call:
    inputs:
      backend_url:
        description: 'Backend URL'
        required: false
        type: string
        default: 'https://iac-infraengine-backend.azurecontainerapps.io'
  workflow_dispatch:
    inputs:
      backend_url:
        description: 'Backend URL (if different from default)'
        required: false
        default: 'https://iac-infraengine-backend.azurecontainerapps.io'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18'
  FRONTEND_DIR: './frontend'

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm test -- --coverage --watchAll=false

      - name: Setup Pages
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/configure-pages@v4

      - name: Build application
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        working-directory: ${{ env.FRONTEND_DIR }}
        env:
          # GitHub Pages deployment environment
          REACT_APP_ENVIRONMENT: github-pages
          REACT_APP_BACKEND_URL: ${{ inputs.backend_url || github.event.inputs.backend_url || 'https://iac-infraengine-backend.azurecontainerapps.io' }}
          REACT_APP_MAPS_SERVICE: openstreetmap
          REACT_APP_DEBUG: false
          # Optimize build for production
          GENERATE_SOURCEMAP: false
          INLINE_RUNTIME_CHUNK: false
        run: npm run build

      - name: Upload artifact
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.FRONTEND_DIR }}/build

  # Lint and code quality checks
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: Run ESLint
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npx eslint src --ext .js,.jsx,.ts,.tsx --max-warnings 0

      - name: Check Prettier formatting
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npx prettier --check src

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci

      - name: Run security audit
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm audit --audit-level moderate

  # Deploy to GitHub Pages
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, lint, security]
    if: github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call')
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Health check after deployment
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Wait for deployment to be ready
        run: sleep 30

      - name: Check frontend deployment
        run: |
          FRONTEND_URL="https://imohweb.github.io/Malta-Business-Indexer"
          echo "Checking frontend at: $FRONTEND_URL"
          
          # Check if the site is accessible
          for i in {1..5}; do
            if curl -f --connect-timeout 10 --max-time 30 "$FRONTEND_URL"; then
              echo "Frontend health check passed!"
              exit 0
            else
              echo "Frontend health check failed, attempt $i/5"
              sleep 15
            fi
          done
          
          echo "Frontend health check failed after 5 attempts"
          exit 1

  notify-success:
    name: Notify Deployment Success
    runs-on: ubuntu-latest
    needs: [health-check]
    if: success() && github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Deployment Success
        run: |
          echo "ðŸŽ‰ Frontend deployment successful!"
          echo "Frontend URL: https://imohweb.github.io/Malta-Business-Indexer"
          echo "Backend URL: ${{ inputs.backend_url || github.event.inputs.backend_url || 'https://iac-infraengine-backend.azurecontainerapps.io' }}"